name: Build QT

on: [push]

jobs:
  build:
    runs-on: windows-latest

    env:
      QTVER: dev  # Change this to the QT version to build
      vcvars_bat: '"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"'

    steps:
    - uses: actions/checkout@v1
      with:
        repository: qt/qt5
        ref: ${{ env.QTVER }}
        submodules: true
        path: QT-Build  # ${{ env.GITHUB_WORKSPACE }}

    - name: Update QTVER
      run: |
        echo "::set-env name=QTVER::$(git describe)"

    - name: Prepare VS2019 environment
      run: |
        $tempfile = [IO.Path]::GetTempFileName()
        $proc = start-process -NoNewWindow -Wait -PassThru -RedirectStandardOutput $tempfile "$env:ComSpec" "/c $env:vcvars_bat 2> nul && set"
        if ($proc.ExitCode) {exit $proc.ExitCode}
        get-content $tempfile | foreach-object {$n,$v = $_.Split("=",2); echo "::set-env name=$n::$v"}
        del $tempfile

    - name: Configure QT
      run: |
        $deploy_dir = mkdir -Force "$PWD\..\QT"
        echo "Run QT configure to $deploy_dir..."
        .\configure.bat -prefix $deploy_dir -nomake examples -nomake tests -opensource -confirm-license

    - name: Runner test commands
      id: test_commands
      run: |
        echo "PS env:QTVER=$env:QTVER"
        echo "Runner env.QTVER=${{ env.QTVER }}"
        echo "Environment Variables"
        Get-Item env:
        echo "::log-command parameter1=test-log-parameter1,parameter2=test-log-parameter2::test-log-command value"
        echo "::set-output name=test_out_var::test_out_var-value"
        echo "::set-env name=test_env_var::test_env_var-value"

    - name: Browse state ${{ env.QTVER }}
      run: |
        echo "Output variable from previous step"
        echo "test_var: ${{ steps.test_commands.outputs.test_out_var }}"
        echo ""
        echo "Environment Variables"
        Get-Item env:
